프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.

또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.

먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.

제한 사항
작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.
작업 진도는 100 미만의 자연수입니다.
작업 속도는 100 이하의 자연수입니다.
배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.

//Stack과 Queue이용
import java.util.*;
class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
	//1. queue = progresses의 각 index값이 100을 넘는 최소일 수
        Queue<Integer> queue = new LinkedList<>();
	//2. int타입의 결과를 답을 List선언
        List<Integer> answer = new ArrayList<>();
        //3. progresses의 길이만큼 반복문 실행
        for(int i = 0 ; i < progresses.length ; i++) {
		//4. queue에 개발에 소요되는 시간을 계산 (progresses 각 index값이 100을 넘기 위한 최소일 수 계산)
		queue.add((int)(Math.ceil((100.0-progresses[i])/speeds[i])));
	}
	//5. queue가 빌 때까지
        while(!queue.isEmpty()){
            //6. 큐의 가장 위의 원소꺼내기
            int day = queue.poll();
		//7. 해당일에 배포되는 총 기능의 수를 담을 변수 선언 및 초기화
            int count = 1;
            //8. 꺼낸 값이 다른 원소보다 작거나 같은 원소는 꺼내고 count+1
            //9. queue가 빌때까지 반복
            while(!queue.isEmpty() && day >= queue.peek()){
                count++;
                queue.poll();
            }
            //10. 비교가 끝나면 count값 넣어주기
            answer.add(count);
        }
	//11.
        return answer.stream().mapToInt(i->i).toArray();
    }
}


return answer.stream().mapToInt(i->i).toArray();   == return answer.stream().mapToInt(Integer::intValue).toArray();
answer.stream() : answer가 List, Set과 같은 컬렉션일 경우 명시적인 반복문 ㅇ벗이 컬렉션을 처리하는 함수적 방법 제공
.mapToInt(i->i) : 각 steam요소에 람다표현식을 적용하여 i요소자체를 수정하지 않고 반환
		  stream을 기본정수를 위한 특수 stream인 IntStream으로 변환하기 때문에 메모리 효율성을 높이고 정수연산에 특화된 메소드 사용
.toArray() : IntStream에서 모든 요소를 수집하여 새로운 정수배열로 변환

Integer::intValue: 스트림의 각 Integer 객체에서 intValue() 메서드를 호출하는 축약 형태
		   intValue() 메서드는 정수를 담는 클래스인 Integer 객체에서 기본 정수 값을 추출
