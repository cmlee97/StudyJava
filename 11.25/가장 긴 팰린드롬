앞뒤를 뒤집어도 똑같은 문자열을 팰린드롬(palindrome)이라고 합니다.
문자열 s가 주어질 때, s의 부분문자열(Substring)중 가장 긴 팰린드롬의 길이를 return 하는 solution 함수를 완성해 주세요.

예를들면, 문자열 s가 "abcdcba"이면 7을 return하고 "abacde"이면 3을 return합니다.

제한사항
문자열 s의 길이 : 2,500 이하의 자연수
문자열 s는 알파벳 소문자로만 구성

class Solution
{
    public int solution(String s)
    {
        //1. 주어진 문자열을 문자 배열로 저장
        char[] array = s.toCharArray();
        //2. 문자열의 길이를 저장
        int length = s.length();
        //3. 가장 긴 팰린드롬의 길이를 찾기 위해 문자열의 길이부터 2까지 검사
        for (int i = length ; i > 1 ; i--) {
            //4. 문자열에서 길이가 i인 모든 부분 문자열 검사
            for (int start = 0; start + i <= length ; start++) {
                //5. 부분 문자열이 팰린드롬인지 확인하는 변수선언
                boolean check = true;
                //6. 부분 문자열의 첫번째 절반과 두번째 절반을 비교
                for (int j = 0 ; j < i/2 ; j++) {
                    //7. 문자가 다르면 팰린드롬이 아니기 때문에
                    if (array[start + j] != array[start + i  - j - 1]) {
                        //8. check = false로 갱신 한 뒤 반복문 탈출
                        check = false;
                        break;
                    }
                }
                //9. 부분 문자열이 팰린드롬인 경우 길이 반환
                if (check) return i;
            }
        }
        //10. 팰린드롬이 없는 경우 길이가 1로 반환  
        return 1;
    }
}
