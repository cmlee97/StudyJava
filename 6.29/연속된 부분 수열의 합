비내림차순으로 정렬된 수열이 주어질 때, 다음 조건을 만족하는 부분 수열을 찾으려고 합니다.

기존 수열에서 임의의 두 인덱스의 원소와 그 사이의 원소를 모두 포함하는 부분 수열이어야 합니다.
부분 수열의 합은 k입니다.
합이 k인 부분 수열이 여러 개인 경우 길이가 짧은 수열을 찾습니다.
길이가 짧은 수열이 여러 개인 경우 앞쪽(시작 인덱스가 작은)에 나오는 수열을 찾습니다.
수열을 나타내는 정수 배열 sequence와 부분 수열의 합을 나타내는 정수 k가 매개변수로 주어질 때, 위 조건을 만족하는 부분 수열의 시작 인덱스와 마지막 인덱스를 배열에 담아 return 하는 solution 함수를 완성해주세요.
이때 수열의 인덱스는 0부터 시작합니다.

제한사항
5 ≤ sequence의 길이 ≤ 1,000,000
1 ≤ sequence의 원소 ≤ 1,000
sequence는 비내림차순으로 정렬되어 있습니다.
5 ≤ k ≤ 1,000,000,000
k는 항상 sequence의 부분 수열로 만들 수 있는 값입니다.

투 포인터(Two Pointer Algorithm) : 배열이나 리스트에서 '두 개의 포인터'를 사용하여 '특정 조건을 만족하는 부분 구간'을 효율적으로 탐색하는 알고리즘
                                  일반적으로 배열이나 리스트가 '정렬되어 있을 때' 사용됨
- 투 포인터 알고리즘은 보통은 왼쪽 포인터와 오른쪽 포인터를 사용하며, 이들은 각각 탐색 범위의 시작과 끝을 가리킴
- 동일한 시점을 기점으로 왼쪽 포인터를 고정한 상태에서 오른쪽 포인터를 이동하고, 조건에 따라 왼쪽 포인터도 이동하며 탐색하는 방식을 가짐
- 해당 알고리즘은 탐색 범위 내에서 특정 조건을 만족하는 요소를 찾거나, 조건을 만족하는 부분 배열의 길이 등을 계산하는 데 사용될 수 있음
단계
1. 배열 또는 리스트의 시작 위치에 첫 번째 포인터와 두 번째 포인터를 설정
2. 두 포인터 사이의 구간을 조사하고 조건을 확인
3. 조건 충족 시 알고리즘 종료
4. 조건 불충족 시 첫번째 또는 두 번째 포인터 이동
5. 2번단계로 돌아가 반복

종류
1. 고정길이 슬라이딩 윈도우 : 고정된 길이의 윈도우를 사용하여 배열이나 리스트를 탐색 EX) 부분 배열의 합이나 평균을 계산
2. 가변길이 슬라이딩 윈도우 : 가변 길이의 윈도우를 사용하여 배열이나 리스트를 탐색 EX) 최소길이 부분 배열, 최대길이 부분 배열 찾기
3. 두 포인터의 합과 차 : 배열이나 리스트에서 두 개의 포인터를 사용하여 합이나 차를 계산하는 문제를 해결 EX) 두요소의 합이나 차가 주어진 값과 일치하는지 확인


//투 포인터를 활용하는 문제
class Solution {
    public int[] solution(int[] sequence, int k) {
        int sum = 0;
        int left = 0;
        int right = sequence.length;
        for(int i = 0, j = 0 ; i < sequence.length ; i++){
            //1. 합보다 작을 때 까지 더한다
            while(j < sequence.length && sum < k){
                sum += sequence[j++];
            }
            //2. 합이 k와 같으면 그때의 길이를 구한다
            if(sum==k){
                int leng = j-i-1;
                if(right - left > leng){
                    left = i;
                    right = j-1;
                }
            }
            sum -= sequence[i];
        }
        int[] answer = {left, right};
        return answer;
    }
}
//https://velog.io/@seowj0710/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Level-2-%EC%97%B0%EC%86%8D%EB%90%9C-%EB%B6%80%EB%B6%84-%EC%88%98%EC%97%B4%EC%9D%98-%ED%95%A9-Java
