//재귀함수의 기본문제
하노이 탑(Tower of Hanoi)은 퍼즐의 일종입니다. 세 개의 기둥과 이 기동에 꽂을 수 있는 크기가 다양한 원판들이 있고, 퍼즐을 시작하기 전에는 한 기둥에 원판들이 작은 것이 위에 있도록 순서대로 쌓여 있습니다.
게임의 목적은 다음 두 가지 조건을 만족시키면서, 한 기둥에 꽂힌 원판들을 그 순서 그대로 다른 기둥으로 옮겨서 다시 쌓는 것입니다.

한 번에 하나의 원판만 옮길 수 있습니다.
큰 원판이 작은 원판 위에 있어서는 안됩니다.
하노이 탑의 세 개의 기둥을 왼쪽 부터 1번, 2번, 3번이라고 하겠습니다. 1번에는 n개의 원판이 있고 이 n개의 원판을 3번 원판으로 최소 횟수로 옮기려고 합니다.

1번 기둥에 있는 원판의 개수 n이 매개변수로 주어질 때, n개의 원판을 3번 원판으로 최소로 옮기는 방법을 return하는 solution를 완성해주세요.

제한사항
n은 15이하의 자연수 입니다.
import java.util.*;
class Solution {
    // 하노이 탑 이동 과정을 저장하는 리스트
    List<int[]> list;
    public int[][] solution(int n) {
        // 리스트 초기화
        list = new ArrayList<>();
        // 하노이 탑 함수 호출
        hanoi(n, 1, 3, 2);
        // 결과를 담을 2차원 배열 생성
        int[][] answer = new int[list.size()][];
        for(int i = 0 ; i < list.size() ; i++){
            // 리스트의 각 이동 과정을 2차원 배열에 저장
            answer[i] = list.get(i);
        }
        return answer;
    }
    // 하노이탑 함수
    void hanoi(int n, int start, int goal, int mid){
        // 원반이 한개인 경우
        if(n == 1){
            // 시작기둥에서 이동해야하는 기둥으로 이동
            list.add(new int[]{start, goal});
            return;
        }
        // // n-1개의 원반을 시작 기둥에서 중간 기둥으로 이동 (goal을 중간 기둥으로 사용)
        hanoi(n-1, start, mid, goal);
        // 가장 큰 원반을 시작 기둥에서 이동해야하는 기둥으로 이동
        list.add(new int[]{start, goal});
        // n-1개의 원반을 중간 기둥에서 이동해야하는 기둥으로 이동 (mid를 시작 기둥으로 사용)
        hanoi(n-1, mid, goal, start);
    }
}
