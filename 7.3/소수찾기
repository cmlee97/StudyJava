//에라토스테너스의 체 :2부터 소수를 구하고자 하는 구간의 모든 수를 나열한다. 그림에서 회색 사각형으로 두른 수들이 여기에 해당한다.
//2는 소수이므로 오른쪽에 2를 쓴다. (빨간색)
//자기 자신을 제외한 2의 배수를 모두 지운다.
import java.util.*;
class Solution {
    Set<Integer> set = new HashSet<>();
    boolean[] visited = new boolean[7];
    public int solution(String numbers) {
        int answer = 0;
        boolean prime = false;
        dfs(numbers, "", 0);
        
        for(Integer num : set){
            if(prime(num)) answer++;
        }
        return answer;
    }
    void dfs(String numbers, String s, int depth){
        if(depth > numbers.length()){
            return;
        }
        for(int i = 0 ; i < numbers.length() ; i++){
            if(!visited[i]){
                visited[i] = true;
                set.add(Integer.parseInt(s+numbers.charAt(i)));
                dfs(numbers, s+numbers.charAt(i), depth+1);
                visited[i] = false;
            }
        }
    }
    
    boolean prime(int n){
        if(n < 2){
            return false;
        }
        for(int i = 2 ; i <= (int)Math.sqrt(n) ; i++){
            if(n%i == 0)return false;
        }
        return true;
    }
}
//https://hstory0208.tistory.com/entry/Java%EC%9E%90%EB%B0%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-Lv2-%EC%86%8C%EC%88%98-%EC%B0%BE%EA%B8%B0-%EC%99%84%EC%A0%84%ED%83%90%EC%83%89DFS
