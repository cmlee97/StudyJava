코니는 매일 다른 옷을 조합하여 입는것을 좋아합니다.

예를 들어 코니가 가진 옷이 아래와 같고, 오늘 코니가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야합니다.

종류	이름
얼굴	동그란 안경, 검정 선글라스
상의	파란색 티셔츠
하의	청바지
겉옷	긴 코트
코니는 각 종류별로 최대 1가지 의상만 착용할 수 있습니다. 예를 들어 위 예시의 경우 동그란 안경과 검정 선글라스를 동시에 착용할 수는 없습니다.
착용한 의상의 일부가 겹치더라도, 다른 의상이 겹치지 않거나, 혹은 의상을 추가로 더 착용한 경우에는 서로 다른 방법으로 옷을 착용한 것으로 계산합니다.
코니는 하루에 최소 한 개의 의상은 입습니다.
코니가 가진 의상들이 담긴 2차원 배열 clothes가 주어질 때 서로 다른 옷의 조합의 수를 return 하도록 solution 함수를 작성해주세요.

제한사항
clothes의 각 행은 [의상의 이름, 의상의 종류]로 이루어져 있습니다.
코니가 가진 의상의 수는 1개 이상 30개 이하입니다.
같은 이름을 가진 의상은 존재하지 않습니다.
clothes의 모든 원소는 문자열로 이루어져 있습니다.
모든 문자열의 길이는 1 이상 20 이하인 자연수이고 알파벳 소문자 또는 '_' 로만 이루어져 있습니다.

//해시문제이므로 Map을 이용해서 풀이
import java.util.*;
class Solution {
    public int solution(String[][] clothes) {
        int answer = 1;
        Map<String, Integer> clothMap = new HashMap<>();
        //1. 주어진 2차배열 clothes에서 각 요소인 배열의 1번째 요소는 key값으로 같은 key가 들어오는 경우 해당 key의 개수를 +1한다
        for(int i = 0 ; i < clothes.length ; i++){
            clothMap.put(clothes[i][1], clothMap.getOrDefault(clothes[i][1], 0 )+1);
        }
        //2. 만들어진 map에서 조합의 경우의 수 구하기 안입는 경우 +1
        for(String key : clothMap.keySet()){
            answer *= clothMap.get(key)+1; 
        }
        //3. 모두 안입은 경우가 있기 때문에 -1해주기
        answer -= 1;
        return answer;
    }
}

//stream 연산식
import java.util.*;
import static java.util.stream.Collectors.*;

class Solution {
    public int solution(String[][] clothes) {
        //1. clothes 배열을 Stream으로 변환
        return Arrays.stream(clothes)
        //2. 의상의 종류(p[1])를 기준으로 그룹화한 후 각 그룹의 의상이름(p[0])을 매핑하여 그룹화된 요소들의 수(counting())를 구하는데, 겨로가는 Map형태로 나타나게 되고 이때 Map의 key는 의상의 종류, value는 해당 종류의 의상 수
        .collect(groupingBy(p -> p[1], mapping(p -> p[0], counting())))
        //3. 그룹화된 Map의 value들만을 추출한 값은 각 의상 종류별 의상 수        
        .values()
        //4. 연산을 사용하여 각 의상 종류별 의상 수에 1을 더한 값을 모두 곱하기
        .stream()
        //5. 계산된 결과에서 모든 의상을 입지 않는 경우를 제외하기위해 -1
        .collect(reducing(1L, (x, y) -> x*(y+1))).intValue()-1;
    }
}
출처: https://psip31.tistory.com/215
