import java.util.*;
import java.lang.Math;
class Solution {
    public String solution(int n) {
        String answer = "";
        Stack<String> change = new Stack<>();
        change.push("0");
        double check = 1;
        for(int i = 0 ; i < n ; i++){            
            if(change.peek() == "0"){
                change.pop();
                change.push("1");
            } 
            else if(change.peek() == "1"){
                change.pop();
                change.push("2");
            }else if(change.peek() == "2"){
                change.pop();
                change.push("4");
            }else if(change.peek() == "4"){
                change.pop();
                change.push("1");
            }
            if(i == (int)Math.pow(3,check)) {
                change.push("1");
                check++;
            }
        }
    
        for(String str : change) answer+=str;
        
        StringBuffer sb = new StringBuffer(answer);
        
        return sb.reverse().toString();

    }
}

import java.util.*;
class Solution {
    public String solution(int n) {
        String answer = "";
        String[] formation = {"4", "1", "2"};
        while(n > 0){
            int remainder = n % 3;
            n /= 3;
            if(remainder == 0){
                n--;
            }
            answer = formation[remainder] + answer;
        }
        return answer;

    }
}
