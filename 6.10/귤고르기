경화는 과수원에서 귤을 수확했습니다. 경화는 수확한 귤 중 'k'개를 골라 상자 하나에 담아 판매하려고 합니다.
그런데 수확한 귤의 크기가 일정하지 않아 보기에 좋지 않다고 생각한 경화는 귤을 크기별로 분류했을 때 서로 다른 종류의 수를 최소화하고 싶습니다.

예를 들어, 경화가 수확한 귤 8개의 크기가 [1, 3, 2, 5, 4, 5, 2, 3] 이라고 합시다.
경화가 귤 6개를 판매하고 싶다면, 크기가 1, 4인 귤을 제외한 여섯 개의 귤을 상자에 담으면, 귤의 크기의 종류가 2, 3, 5로 총 3가지가 되며 이때가 서로 다른 종류가 최소일 때입니다.

경화가 한 상자에 담으려는 귤의 개수 k와 귤의 크기를 담은 배열 tangerine이 매개변수로 주어집니다. 경화가 귤 k개를 고를 때 크기가 서로 다른 종류의 수의 최솟값을 return 하도록 solution 함수를 작성해주세요.

제한사항
1 ≤ k ≤ tangerine의 길이 ≤ 100,000
1 ≤ tangerine의 원소 ≤ 10,000,000

//귤을 담을 수 있는 개수 k와 귤의 크기를 나타내는 배열 tangerine을 통해 상자에 담을 수 있는 서로 다른 크기의 종류의 최소를 반환하는 문제
import java.util.*;
class Solution {
    public int solution(int k, int[] tangerine) {
        int answer = 0;
        //1. 귤을 담을 Map선언 : 귤의 크기는 key, 귤의 개수는 value
        Map<Integer, Integer> map = new HashMap<>();
        //2. map에 크기별 귤의 개수 담기
        for(int i : tangerine){
            //3. getOrDefault()메서드로 1씩 증가시켜 담기
            map.put(i, map.getOrDefault(i, 0)+1);
        }
        //4. 귤의 크기 리스트 생성 : keySet()메서드를 통해 key값들을 담은 list초기화
        List<Integer> sizeList = new ArrayList<>(map.keySet());
        //5. 개수별 내림차순 정렬 : sort()메서드와 Comparator인터페이스의 compare()메서드를 사용
        sizeList.sort(((o1, o2) -> map.get(o2)-map.get(o1)));
        //6. k 개수 만큼 담기 -> 최소값 추출
        for(Integer i : sizeList){
            //7. k가 0보다 작거나 같아지면 반복문 종료
            if(k <= 0) break;
            answer++;
            //8. k에서 i크기의 귤의 개수를 빼기
            k -= map.get(i);
        }
        
        return answer;
    }
}

sizeList.sort(((o1, o2) -> map.get(o2)-map.get(o1)));
람다표현식으로 객체 o1, o2를 입력받아 map에서 .get(x)에서 x에 해당하는 키의 값을 가져와 뺴는 연산을 하는 함수
해당하는 키가 없을경우 null 또는 undefined값이 반환될 수 있으므로, NullPointerException이 발생할 수 있으므로 예외처리가 필요할 수 있음
